/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 fountain.gltf -T 
Files: fountain.gltf [271.63KB] > fountain-transformed.glb [18.34KB] (93%)
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GroupProps, useFrame, useLoader } from '@react-three/fiber';
import * as Three from 'three';
import textureImg from '@/assets/images/marble.webp';

export function Model(props: GroupProps) {
  const { nodes, materials } = useGLTF('/meshes/fountain-transformed.glb') as any;
  const texture = useLoader(Three.TextureLoader, textureImg.src);

  const meshRef = useRef<Three.Group>(null);

  useFrame(
    // (_, delta) => {
    //   meshRef.current && (meshRef.current.rotation.y += delta / 10);
    // }
    ({ mouse }) => {
      meshRef.current && meshRef.current.rotation.set(meshRef.current.rotation.x, mouse.x, meshRef.current.rotation.z);
    }
  );

  return (
    <group {...props} dispose={null} ref={meshRef}>
      <mesh geometry={nodes.水池.geometry} material={materials.池壁} />
      <mesh rotation={[-Math.PI / 2, 0, 0]} scale={[15, 15, 15]}>
        <planeGeometry />
        <meshBasicMaterial attach="material" map={texture} />
      </mesh>
      <mesh geometry={nodes.中層水.geometry} material={materials.水} position={[0, 0.3, 0]} scale={[1, 0.3, 1]} />
      <instancedMesh args={[nodes.圓柱體004.geometry, materials.錢幣, 21]} instanceMatrix={nodes.圓柱體004.instanceMatrix} />
    </group>
  );
}

useGLTF.preload('/meshes/fountain-transformed.glb');
